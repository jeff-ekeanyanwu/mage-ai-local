if 'custom' not in globals():
    from mage_ai.data_preparation.decorators import custom
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


@custom
def custom_sql_query():
    sql_query = "WITH campaign_ids AS ( SELECT DISTINCT campaign_id FROM dsp_impressions WHERE impressions > 0 ) ,impressions_raw AS ( SELECT advertiser, case when campaign similar to '_OLV$' then 'OLV' when campaign similar to '_STV$' then 'STV' when campaign similar to '_TOF$'then 'Top of Funnel' when campaign similar to '_MOF$' then 'Middle of Funnel' when campaign similar to '_BOF$' then 'Bottom of Funnel' else campaign end as campaign_type, impression_dt, impressions, user_id FROM display_impressions WHERE impressions > 0 ) ,impressions AS ( SELECT advertiser, campaign_type, user_id, MIN(impression_dt) AS impression_dt, SUM(impressions) AS bof_impressions FROM impressions_raw GROUP BY advertiser, campaign_type, user_id ) ,conversions_raw AS ( SELECT advertiser, user_id, new_to_brand, conversion_event_dt, total_purchases AS purchases FROM amazon_attributed_events_by_conversion_time WHERE total_purchases > 0 AND campaign similar to '_BOF$' ) ,conversions_bof AS ( SELECT advertiser ,user_id ,MAX(conversion_event_dt) AS conversion_event_dt ,SUM(purchases) AS purchases FROM conversions_raw GROUP BY advertiser ,user_id ) ,bof_v_olv_purchases AS ( SELECT conv.advertiser ,imp.user_id ,purchases FROM conversions_bof AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id WHERE imp.campaign_type = 'OLV' AND conv.conversion_event_dt > imp.impression_dt ) ,bof_v_stv_purchases AS ( SELECT conv.advertiser ,imp.user_id ,purchases FROM conversions_bof AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id WHERE imp.campaign_type = 'STV' AND conv.conversion_event_dt > imp.impression_dt ) ,bof_v_tof_purchases as ( SELECT conv.advertiser ,imp.user_id ,purchases FROM conversions_bof AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id WHERE imp.campaign_type = 'Top of Funnel' AND conv.conversion_event_dt > imp.impression_dt ) ,bof_v_mof_purchases as ( SELECT conv.advertiser ,imp.user_id ,purchases FROM conversions_bof AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id WHERE imp.campaign_type = 'Middle of Funnel' AND conv.conversion_event_dt > imp.impression_dt ) ,total_bof_purchases as ( SELECT advertiser ,SUM(purchases) as total_bof_purchases ,0 as total_bof_v_olv_purchases ,0 as total_bof_v_stv_purchases ,0 as total_bof_v_tof_purchases ,0 as total_bof_v_mof_purchases FROM conversions_bof GROUP BY advertiser ) ,total_bof_v_olv_purchases AS ( SELECT advertiser ,0 as total_bof_purchases ,sum(purchases) as total_bof_v_olv_purchases ,0 as total_bof_v_stv_purchases ,0 as total_bof_v_tof_purchases ,0 as total_bof_v_mof_purchases FROM bof_v_olv_purchases GROUP BY advertiser ) ,total_bof_v_stv_purchases AS ( SELECT advertiser ,0 as total_bof_purchases ,0 as total_bof_v_olv_purchases ,sum(purchases) as total_bof_v_stv_purchases ,0 as total_bof_v_tof_purchases ,0 as total_bof_v_mof_purchases FROM bof_v_stv_purchases GROUP BY advertiser ) ,total_bof_v_tof_purchases as ( SELECT advertiser ,0 as total_bof_purchases ,0 as total_bof_v_olv_purchases ,0 as total_bof_v_stv_purchases ,sum(purchases) as total_bof_v_tof_purchases ,0 as total_bof_v_mof_purchases FROM bof_v_tof_purchases GROUP BY advertiser ) ,total_bof_v_mof_purchases as ( SELECT advertiser ,0 as total_bof_purchases ,0 as total_bof_v_olv_purchases ,0 as total_bof_v_stv_purchases ,0 as total_bof_v_tof_purchases ,sum(purchases) as total_bof_v_mof_purchases FROM bof_v_mof_purchases GROUP BY advertiser ) ,combined AS ( SELECT advertiser ,total_bof_purchases ,total_bof_v_olv_purchases ,total_bof_v_stv_purchases ,total_bof_v_tof_purchases ,total_bof_v_mof_purchases FROM total_bof_purchases UNION ALL SELECT advertiser ,total_bof_purchases ,total_bof_v_olv_purchases ,total_bof_v_stv_purchases ,total_bof_v_tof_purchases ,total_bof_v_mof_purchases FROM total_bof_v_olv_purchases UNION ALL SELECT advertiser ,total_bof_purchases ,total_bof_v_olv_purchases ,total_bof_v_stv_purchases ,total_bof_v_tof_purchases ,total_bof_v_mof_purchases FROM total_bof_v_stv_purchases UNION ALL SELECT advertiser ,total_bof_purchases ,total_bof_v_olv_purchases ,total_bof_v_stv_purchases ,total_bof_v_tof_purchases ,total_bof_v_mof_purchases FROM total_bof_v_tof_purchases UNION ALL SELECT advertiser ,total_bof_purchases ,total_bof_v_olv_purchases ,total_bof_v_stv_purchases ,total_bof_v_tof_purchases ,total_bof_v_mof_purchases FROM total_bof_v_mof_purchases ) SELECT CAST(BUILT_IN_PARAMETER('TIME_WINDOW_START') as date) as start_date ,CAST(BUILT_IN_PARAMETER('TIME_WINDOW_END') as date) as end_date ,advertiser ,sum(total_bof_purchases) as total_bof_purchases ,sum(total_bof_v_olv_purchases) as total_bof_v_olv_purchases ,sum(total_bof_v_stv_purchases) as total_bof_v_stv_purchases ,sum(total_bof_v_tof_purchases) as total_bof_v_tof_purchases ,sum(total_bof_v_mof_purchases) as total_bof_v_mof_purchases FROM combined GROUP BY start_date, end_date, advertiser"
    query_name = "bof_purchases"
    return [sql_query, query_name]