if 'custom' not in globals():
    from mage_ai.data_preparation.decorators import custom
if 'test' not in globals():
    from mage_ai.data_preparation.decorators import test


@custom
def custom_sql_query():
    sql_query = "WITH impressions_raw AS ( SELECT advertiser, campaign_id, campaign, case when campaign similar to '(?i)VID' then 'VID' when campaign similar to '(?i)TOF' then 'TOF' when campaign similar to '(?i)MOF' then 'MOF' when campaign similar to '(?i)BOF' then 'BOF' when campaign similar to '(?i)AMC' then 'AMC' else campaign end as campaign_type, impressions, impression_dt, user_id FROM display_impressions WHERE impressions >0 ) ,impressions AS ( SELECT advertiser, user_id, campaign, campaign_type, MIN(impression_dt) as impression_dt FROM impressions_raw GROUP BY advertiser, campaign_type, user_id, campaign ) ,conversions_sp_raw AS ( SELECT advertiser, user_id, campaign, ad_product_type, case when campaign similar to '(?i)VID' then 'VID' when campaign similar to '(?i)TOF' then 'TOF' when campaign similar to '(?i)MOF' then 'MOF' when campaign similar to '(?i)BOF' then 'BOF' when campaign similar to '(?i)AMC' then 'AMC' else null end as campaign_type, conversion_event_dt, total_purchases AS purchases FROM amazon_attributed_events_by_conversion_time where total_purchases > 0 and ad_product_type is not null ) ,conversions_sp as ( select advertiser ,user_id ,campaign ,MAX(conversion_event_dt) as conversion_event_dt ,SUM(purchases) as purchases from conversions_sp_raw group by advertiser ,user_id ,campaign ), conversion_sp_v_bof AS ( SELECT imp.advertiser, case when imp.campaign_type is null then conv.campaign_type end as campaign_type, conv.campaign, ad_product_type, 0 as purchases_total, 0 as purchases_sp_v_VID, purchases as purchases_sp_v_bof, 0 as purchases_sp_v_amc, 0 as purchases_sp_v_mof, 0 as purchases_sp_v_tof FROM conversions_sp_raw AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id where imp.campaign_type='BOF' AND conv.conversion_event_dt > imp.impression_dt ), conversion_sp_v_amc AS ( SELECT imp.advertiser, case when imp.campaign_type is null then conv.campaign_type end as campaign_type, conv.campaign, ad_product_type, 0 as purchases_total, 0 as purchases_sp_v_VID, 0 as purchases_sp_v_bof, purchases as purchases_sp_v_amc, 0 as purchases_sp_v_mof, 0 as purchases_sp_v_tof FROM conversions_sp_raw AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id where imp.campaign_type='AMC' AND conv.conversion_event_dt > imp.impression_dt ), conversion_sp_v_mof AS ( SELECT imp.advertiser, case when imp.campaign_type is null then conv.campaign_type end as campaign_type, conv.campaign, ad_product_type, 0 as purchases_total, 0 as purchases_sp_v_VID, 0 as purchases_sp_v_bof, 0 as purchases_sp_v_amc, purchases as purchases_sp_v_mof, 0 as purchases_sp_v_tof FROM conversions_sp_raw AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id where imp.campaign_type='MOF' AND conv.conversion_event_dt > imp.impression_dt ), conversion_sp_v_tof AS ( SELECT imp.advertiser, case when imp.campaign_type is null then conv.campaign_type end as campaign_type, conv.campaign, ad_product_type, 0 as purchases_total, 0 as purchases_sp_v_VID, 0 as purchases_sp_v_bof, 0 as purchases_sp_v_amc, 0 as purchases_sp_v_mof, purchases as purchases_sp_v_tof FROM conversions_sp_raw AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id where imp.campaign_type='TOF' AND conv.conversion_event_dt > imp.impression_dt ), conversion_sp_v_VID AS ( SELECT imp.advertiser, case when imp.campaign_type is null then conv.campaign_type end as campaign_type, conv.campaign, ad_product_type, 0 as purchases_total, purchases as purchases_sp_v_VID, 0 as purchases_sp_v_bof, 0 as purchases_sp_v_amc, 0 as purchases_sp_v_mof, 0 as purchases_sp_v_tof FROM conversions_sp_raw AS conv JOIN impressions AS imp ON conv.user_id = imp.user_id where imp.campaign_type='VID' AND conv.conversion_event_dt > imp.impression_dt ), conversion_sp AS ( SELECT advertiser, campaign, ad_product_type, campaign_type, purchases as purchases_total, 0 as purchases_sp_v_VID, 0 as purchases_sp_v_bof, 0 as purchases_sp_v_amc, 0 as purchases_sp_v_mof, 0 as purchases_sp_v_tof FROM conversions_sp_raw ) ,combined as ( SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp_v_VID UNION ALL SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp_v_bof UNION ALL SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp_v_amc UNION ALL SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp_v_mof UNION ALL SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp_v_tof UNION ALL SELECT advertiser, campaign, ad_product_type, campaign_type, purchases_total, purchases_sp_v_VID, purchases_sp_v_bof, purchases_sp_v_amc, purchases_sp_v_mof, purchases_sp_v_tof FROM conversion_sp ) SELECT CAST(BUILT_IN_PARAMETER('TIME_WINDOW_START') as date) as start_date, CAST(BUILT_IN_PARAMETER('TIME_WINDOW_END') as date) as end_date, campaign, ad_product_type, campaign_type, sum(purchases_total) as purchases_total, sum(purchases_sp_v_VID) as purchases_sp_v_VID, sum(purchases_sp_v_bof) as purchases_sp_v_bof, sum(purchases_sp_v_amc) as purchases_sp_v_amc, sum(purchases_sp_v_mof) as purchases_sp_v_mof, sum(purchases_sp_v_tof) as purchases_sp_v_tof FROM combined GROUP BY 1,2,3,4,5"
    query_name = "sponsored_purchases"
    return [sql_query, query_name]
